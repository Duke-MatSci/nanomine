# Prototype environment variable definitions
#
# WARNING - If you've already copied and edited this file in /apps/nanomine_env
#  DO NOT OVERWRITE your modified copy with this file
#    Do this instead: diff /apps/nanomine/install/nanomine_env.prototype /apps/nanomine_env
#    The above command will show the differences to highlight what has changed since the file was updated
#    DON'T overwrite the file -- you might lose access to your database and need to re-install/reload -- very inconvenient!
#    BACKUP /apps/nanomine_env before making changes using a cmd like 'cp /apps/nanomine_env /apps/nanomine_env.bkp'
# First time only:
#   copy this file to /apps/nanomine_env
# On updates -- heed the warning above and only copy new/changed variables as appropriate
#
# chmod og-rw /apps/nanomine_env
#   --> the above cmd removes read-write access for 'others' and 'group' making the file private for the user
#
# Be sure to CHANGE DEFAULT PASSWORDS AND SECRETS
#
export NM_AUTH_ENABLED="no" # no or yes
export NM_AUTH_TYPE="local" # local or shib-proxy
export NM_AUTH_SECRET="SOME_RANDOM_STRING" # CHANGE this for your installation - NOW!
export NM_SESSION_SECRET="SOME_RANDOM_STRING2" # CHANGET this for your installation - NOW!

export NM_MONGO_PORT=27017
export NM_MONGO_HOST=localhost
export NM_MONGO_DB=mgi
export NM_MONGO_USER="mongodevadmin"
export NM_MONGO_PWD="mydevmongopw" # SET THIS to a different password NOW
export NM_MONGO_OWNER_USER="mongodevowner"
export NM_MONGO_OWNER_PWD="mydevmongoownerpw" # SET THIS to a different password NOW
export NM_MONGO_API_USER="mongodevapi"
export NM_MONGO_API_PWD="mydevmongoapipw" # SET THIS to a different password NOW
export NM_MONGO_URI="mongodb://${NM_MONGO_API_USER}:${NM_MONGO_API_PWD}@${NM_MONGO_HOST}:${NM_MONGO_PORT}/${NM_MONGO_DB}"
export NM_MONGO_DUMP="http://path.to.mongo.dump.tgz" # Before using, obtain the actual location for this reference

export NM_WEBFILES_ROOT="/apps/nanomine-webfiles"
export NM_WEB_BASE_URI="http://ubuntu.local" # external apache uri. May need to tweak this for your local machine/vm depending on external access location -- external uri to apache
export NM_JOB_DATA="${NM_WEBFILES_ROOT}/jobdata"
export NM_JOB_DATA_URI="/nmf/jobdata"
export NM_LOCAL_REST_BASE="http://localhost"

export NM_SMTP_SERVER="myemailserver"
export NM_SMTP_PORT="587" # other fields will be needed if not local server, but for now this is adequate
export NM_SMTP_TEST="true" # set this to true and emails will go into the log for testing instead of sending
export NM_SMTP_REST_URL="http://localhost/nmr/jobemail"
export NM_SMTP_ADMIN_ADDR="adminuser@example.com"
export NM_SMTP_TEST_ADDR="testuser@example.com"
export NM_SMTP_AUTH_USER="mysmtpuser@example.com"
export NM_SMTP_AUTH_PWD="mysmtppwd"

export NM_LOGLEVEL="debug"  # use this when creating a logger for javascript or python, then log each message according to severity i.e. logger.info('my info message')
export NM_LOGFILE="nanomine.log" # use this log for python logging

export NM_MATLAB_AVAILABLE="no" # run TEST_XXXXXX matlab scripts instead of matlab directly

export NM_NEO4J_IMAGE="http://path.to.neo4j.tgz"  # Before using, obtain the actual location for this reference
